name: Docker Image CI

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Build
      run: docker build . --file Dockerfile --tag c3po:$(date +%s)

    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        go get golang.org/x/tools/cmd/goimports

    - name: Fmt
      run: gofmt -l .  | if [ $(grep -c -o -E ".*") -gt 0 ]; then exit 1; fi

    - name: Imports
      run: |
        `go list -f {{.Target}} golang.org/x/tools/cmd/goimports` -l . | if [ $(grep -c -o -E ".*") -gt 0 ]; then return 1; fi

    - name: Build
      run: go build -v ./...

    - name: Test
      run: go test -race -coverprofile=coverage.txt -covermode=atomic ./pkg/...

    - name: Integration test
      run: |
        sudo rm /usr/local/bin/docker-compose
        curl -L https://github.com/docker/compose/releases/download/1.24.1/docker-compose-`uname -s`-`uname -m` > docker-compose
        chmod +x docker-compose
        sudo mv docker-compose /usr/local/bin
        docker-compose up --build -d
        sudo docker-compose run go go test ./test/...

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        fail_ci_if_error: true
        yml: ./codecov.yml