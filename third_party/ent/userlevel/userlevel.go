// Code generated by entc, DO NOT EDIT.

package userlevel

import (
	"time"

	"github.com/arpb2/C-3PO/third_party/ent/schema"
)

const (
	// Label holds the string label denoting the userlevel type in the database.
	Label = "user_level"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at vertex property in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at vertex property in the database.
	FieldUpdatedAt = "updated_at"
	// FieldCode holds the string denoting the code vertex property in the database.
	FieldCode = "code"
	// FieldWorkspace holds the string denoting the workspace vertex property in the database.
	FieldWorkspace = "workspace"

	// Table holds the table name of the userlevel in the database.
	Table = "user_levels"
	// DeveloperTable is the table the holds the developer relation/edge.
	DeveloperTable = "user_levels"
	// DeveloperInverseTable is the table name for the User entity.
	// It exists in this package in order to avoid circular dependency with the "user" package.
	DeveloperInverseTable = "users"
	// DeveloperColumn is the table column denoting the developer relation/edge.
	DeveloperColumn = "user_levels"
	// LevelTable is the table the holds the level relation/edge.
	LevelTable = "user_levels"
	// LevelInverseTable is the table name for the Level entity.
	// It exists in this package in order to avoid circular dependency with the "level" package.
	LevelInverseTable = "levels"
	// LevelColumn is the table column denoting the level relation/edge.
	LevelColumn = "user_level_level"
)

// Columns holds all SQL columns for userlevel fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldCode,
	FieldWorkspace,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the UserLevel type.
var ForeignKeys = []string{
	"user_levels",
	"user_level_level",
}

var (
	fields = schema.UserLevel{}.Fields()

	// descCreatedAt is the schema descriptor for created_at field.
	descCreatedAt = fields[0].Descriptor()
	// DefaultCreatedAt holds the default value on creation for the created_at field.
	DefaultCreatedAt = descCreatedAt.Default.(func() time.Time)

	// descUpdatedAt is the schema descriptor for updated_at field.
	descUpdatedAt = fields[1].Descriptor()
	// DefaultUpdatedAt holds the default value on creation for the updated_at field.
	DefaultUpdatedAt = descUpdatedAt.Default.(func() time.Time)
	// UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	UpdateDefaultUpdatedAt = descUpdatedAt.UpdateDefault.(func() time.Time)

	// descCode is the schema descriptor for code field.
	descCode = fields[2].Descriptor()
	// CodeValidator is a validator for the "code" field. It is called by the builders before save.
	CodeValidator = descCode.Validators[0].(func(string) error)

	// descWorkspace is the schema descriptor for workspace field.
	descWorkspace = fields[3].Descriptor()
	// WorkspaceValidator is a validator for the "workspace" field. It is called by the builders before save.
	WorkspaceValidator = descWorkspace.Validators[0].(func(string) error)
)
